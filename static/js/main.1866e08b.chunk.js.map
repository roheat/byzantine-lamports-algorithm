{"version":3,"sources":["components/select-options/select-options.component.jsx","components/display-tree/display-tree.component.jsx","components/main-container/main-container.component.jsx","App.js","index.js"],"names":["SelectOptions","handleChange","event","target","name","value","setState","parseInt","handleClick","checked","faulty","state","filter","e","N","arr","i","this","push","map","n","className","key","includes","type","onChange","renderCheckboxes","onClick","props","onSubmitClick","length","React","Component","ONE","UNKNOWN","DisplayTree","tree","Tree","input","path","output","myTreeData","finished","prevProps","prevState","algorithm","M","ids","Array","fill","GenerateChildren","Decide","treeData","mapTree","_root","dimensions","treeContainer","getBoundingClientRect","translate","x","width","y","height","data","children","Node","callback","queue","currentTree","shift","traverseBF","node","toData","child","contains","process","source","current_path","rank","curr_ids","slice","curr_input","isFaulty","Math","round","random","toString","add","j","c","counts","reduce","sum","attributes","_collapsed","ref","tc","orientation","initialDepth","nodeSize","styles","nodes","circle","stroke","leafNode","renderResult","MainContainer","handleSubmit","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1866e08b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./select-options.styles.css\";\r\nclass SelectOptions extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      N: 0,\r\n      faulty: []\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: parseInt(value), faulty: [] });\r\n  };\r\n\r\n  handleClick = event => {\r\n    const { checked, value } = event.target;\r\n    const { faulty } = this.state;\r\n    if (checked) this.setState({ faulty: [...faulty, parseInt(value)] });\r\n    else\r\n      this.setState({\r\n        faulty: faulty.filter(e => e !== parseInt(value))\r\n      });\r\n  };\r\n\r\n  renderCheckboxes() {\r\n    let arr = [];\r\n    for (let i = 0; i < this.state.N; i++) arr.push(i);\r\n\r\n    return arr.map(n => (\r\n      <div className=\"checkbox\" key={n}>\r\n        <input\r\n          checked={this.state.faulty.includes(n)}\r\n          type=\"checkbox\"\r\n          value={n}\r\n          onChange={this.handleClick}\r\n        />\r\n        <label>General {n}</label>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { N, faulty } = this.state;\r\n    return (\r\n      <div className=\"options-container\">\r\n        <h1 className=\"title\">Visualizing Lamport's Algorithm</h1>\r\n        <h5>Number of Generals (N)</h5>\r\n        <input\r\n          className=\"general-count\"\r\n          name=\"N\"\r\n          type=\"number\"\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <h5>Pick Traitor Generals</h5>\r\n        {N > 0 && this.renderCheckboxes()}\r\n\r\n        {N > 0 && (\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => this.props.onSubmitClick(N, faulty.length, faulty)}\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectOptions;\r\n","import React from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\n\r\nimport \"./display-tree.styles.css\";\r\n\r\nconst ZERO = \"0\";\r\nconst ONE = \"1\";\r\nconst UNKNOWN = \"?\";\r\n\r\nclass DisplayTree extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttree: this.Tree({ input: ONE, path: \"0\", output: UNKNOWN }),\r\n\t\t\tmyTreeData: [],\r\n\t\t\tfinished: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps !== this.props) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\ttree: this.Tree({ input: ONE, path: \"0\", output: UNKNOWN }),\r\n\t\t\t\t\tmyTreeData: [],\r\n\t\t\t\t\tfinished: false\r\n\t\t\t\t},\r\n\t\t\t\t() => this.algorithm()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\talgorithm() {\r\n\t\tlet { tree } = this.state;\r\n\r\n\t\tlet { N, M } = this.props;\r\n\t\tlet ids = new Array(N).fill(true);\r\n\t\tthis.GenerateChildren(N, M, ids);\r\n\t\tthis.Decide(N, M);\r\n\t\tconst treeData = this.mapTree([tree._root]);\r\n\t\tthis.setState({ myTreeData: treeData, tree, finished: true });\r\n\t\tconst dimensions = this.treeContainer.getBoundingClientRect();\r\n\t\tthis.setState({\r\n\t\t\ttranslate: {\r\n\t\t\t\tx: dimensions.width / 2,\r\n\t\t\t\ty: dimensions.height / 4\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tNode(data) {\r\n\t\treturn { data, children: [] };\r\n\t}\r\n\r\n\tTree(data) {\r\n\t\tlet node = this.Node(data);\r\n\t\treturn { _root: node };\r\n\t}\r\n\r\n\ttraverseBF(callback) {\r\n\t\tlet queue = [];\r\n\t\tif (!this.state.tree) return;\r\n\t\tqueue.push(this.state.tree._root);\r\n\r\n\t\tlet currentTree = queue.shift();\r\n\t\twhile (currentTree) {\r\n\t\t\tfor (let i = 0, length = currentTree.children.length; i < length; i++) {\r\n\t\t\t\tqueue.push(currentTree.children[i]);\r\n\t\t\t}\r\n\t\t\tcallback(currentTree);\r\n\t\t\tcurrentTree = queue.shift();\r\n\t\t}\r\n\t}\r\n\r\n\tcontains(value, callback) {\r\n\t\tthis.traverseBF(node => callback(node));\r\n\t}\r\n\r\n\tadd(data, toData) {\r\n\t\tlet child = this.Node(data);\r\n\t\tlet callback = node => {\r\n\t\t\tif (node.data.path === toData) {\r\n\t\t\t\tnode.children.push(child);\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.contains(toData, callback);\r\n\t}\r\n\r\n\tisFaulty(process) {\r\n\t\tconst { faulty } = this.props;\r\n\t\treturn faulty.includes(process);\r\n\t}\r\n\r\n\tGenerateChildren(N, M, ids, source = 0, current_path = \"\", rank = 0) {\r\n\t\tlet curr_ids = ids.slice(0);\r\n\t\tcurr_ids[source] = false;\r\n\t\tcurrent_path += source;\r\n\t\tif (rank < M)\r\n\t\t\tfor (let i = 0; i < curr_ids.length; i++)\r\n\t\t\t\tif (curr_ids[i]) {\r\n\t\t\t\t\tlet curr_input;\r\n\t\t\t\t\tthis.contains(current_path, node => {\r\n\t\t\t\t\t\tif (node.data.path === current_path) {\r\n\t\t\t\t\t\t\tif (this.isFaulty(i)) {\r\n\t\t\t\t\t\t\t\tcurr_input = node.data.input === ONE ? ZERO : ONE;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcurr_input = node.data.input;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (this.isFaulty(0) && current_path === \"0\")\r\n\t\t\t\t\t\tcurr_input = Math.round(Math.random()).toString();\r\n\r\n\t\t\t\t\tcurr_input = curr_input === \"0\" ? ZERO : ONE;\r\n\t\t\t\t\tthis.add(\r\n\t\t\t\t\t\t{ input: curr_input, path: `${current_path}${i}`, output: UNKNOWN },\r\n\t\t\t\t\t\tcurrent_path\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.GenerateChildren(N, M, curr_ids, i, current_path, rank + 1);\r\n\t\t\t\t}\r\n\t}\r\n\r\n\tDecide(N, M) {\r\n\t\tthis.traverseBF(node => {\r\n\t\t\tif (node.data.path.length === M + 1) node.data.output = node.data.input;\r\n\t\t});\r\n\r\n\t\tfor (let i = 0; i <= M - 1; i++) {\r\n\t\t\tfor (let j = M; j > 0; j--) {\r\n\t\t\t\tthis.traverseBF(node => {\r\n\t\t\t\t\tif (node.data.path.length === j) {\r\n\t\t\t\t\t\tlet c = Array(3).fill(0);\r\n\t\t\t\t\t\tconst counts = node.children.reduce((sum, child) => {\r\n\t\t\t\t\t\t\tif (child.data.output === ZERO) c[0]++;\r\n\t\t\t\t\t\t\tif (child.data.output === ONE) c[1]++;\r\n\t\t\t\t\t\t\tif (child.data.output === UNKNOWN) c[2]++;\r\n\t\t\t\t\t\t\treturn c;\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t\tif (counts[0] > (N - M) / 2) node.data.output = ZERO;\r\n\t\t\t\t\t\telse if (counts[1] > (N - M) / 2) node.data.output = ONE;\r\n\t\t\t\t\t\telse node.data.output = UNKNOWN;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmapTree(tree) {\r\n\t\treturn tree.map(node => ({\r\n\t\t\tname: `G${node.data.path[node.data.path.length - 1]}`,\r\n\t\t\tattributes: node.data,\r\n\t\t\tchildren: this.mapTree(node.children),\r\n\t\t\t_collapsed: node.data.path.length > 1\r\n\t\t}));\r\n\t}\r\n\r\n\trenderResult() {\r\n\t\tlet arr = [];\r\n\t\tfor (let i = 0; i < this.props.N; i++) arr.push(i);\r\n\r\n\t\treturn arr.map(n => (\r\n\t\t\t<p className=\"list\" key={n}>\r\n\t\t\t\tGeneral {n}{\" \"}\r\n\t\t\t\t{this.isFaulty(n) ? (\r\n\t\t\t\t\t<span>is a traitor</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>decides on value {this.state.tree._root.data.output}</span>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst svgStyles = {\r\n\t\t\tnodes: {\r\n\t\t\t\tnode: {\r\n\t\t\t\t\tcircle: { fill: \"#364FC7\" },\r\n\t\t\t\t\tattributes: { stroke: \"black\" }\r\n\t\t\t\t},\r\n\t\t\t\tleafNode: {\r\n\t\t\t\t\tattributes: { stroke: \"black\" }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst { myTreeData, finished } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"treeContainer\" ref={tc => (this.treeContainer = tc)}>\r\n\t\t\t\t{myTreeData.length > 0 && (\r\n\t\t\t\t\t<Tree\r\n\t\t\t\t\t\tdata={this.state.myTreeData}\r\n\t\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\t\ttranslate={this.state.translate}\r\n\t\t\t\t\t\tinitialDepth={1}\r\n\t\t\t\t\t\tnodeSize={{ x: 80, y: 200 }}\r\n\t\t\t\t\t\tstyles={svgStyles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{finished && (\r\n\t\t\t\t\t<div className=\"result-container\">{this.renderResult()}</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default DisplayTree;\r\n","import React from \"react\";\r\nimport SelectOptions from \"../select-options/select-options.component\";\r\nimport DisplayTree from \"../display-tree/display-tree.component\";\r\n\r\nimport \"./main-container.styles.css\";\r\nclass MainContainer extends React.Component {\r\n  state = { N: 0, M: 0, faulty: [] };\r\n\r\n  handleSubmit = (N, M, faulty) => {\r\n    this.setState({ N, M, faulty });\r\n  };\r\n  render() {\r\n    const { M, N, faulty } = this.state;\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"container\">\r\n          <SelectOptions onSubmitClick={this.handleSubmit} />\r\n          <DisplayTree N={N} M={M} faulty={faulty} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport MainContainer from \"./components/main-container/main-container.component\";\r\n\r\nconst App = () => (\r\n\t<div>\r\n\t\t<MainContainer />\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}